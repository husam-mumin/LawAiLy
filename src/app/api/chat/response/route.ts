import { NextRequest, NextResponse } from "next/server";
import Response, { responseType } from "@/models/Responses";
import dbConnect from "@/lib/db";
import Message, { IMessage } from "@/models/Messages";
import OpenAI from "openai";
import { filesType } from "../[chatid]/messages/route";

const openai = new OpenAI({
  apiKey: process.env.CHAT_API_KEY,
  baseURL: process.env.OPENAI_API_BASE_URL,
});

const checkIfLaw = (message: string) => {
  // Check if the message contains keywords related to Libyan law
  const lawKeywords = [
    "قانون",
    "تشريع",
    "دستور",
    "محكمة",
    "قضية",
    "عقوبة",
    "حقوق",
    "واجبات",
    "إجراءات قانونية",
    "استشارة قانونية",
    "قانوني",
    "محامي",
    "قوانين ليبية",
    "قانون الأحوال الشخصية",
    "القانون المدني",
    "القانون الجزائي",
    "القانون التجاري",
    "القانون المالي",
    "التشريعات الضريبية",
    "التشريعات الجمركية",
    "الاستثمار العقاري",
    "القوانين المتعلقة بالاستثمار",
    "القوانين العقارية",
    "التعديلات القانونية",
    "القوانين الجديدة",
    "المحكمة العليا",
    "النيابة العامة",
    "التحقيقات الجنائية",
    "الجرائم",
    "المخالفات",
    "الحقوق المدنية",
    "الحقوق السياسية",
    "الحقوق الاقتصادية",
    "الحقوق الاجتماعية",
    "الحقوق الثقافية",
    "الحقوق البيئية",
    "الحقوق الإنسانية",
    "الحقوق الأساسية",
    "الحقوق الدستورية",
    "الحقوق الفردية",
  ];

  return lawKeywords.some((keyword) => message.includes(keyword));
};

const checkIsinheritance = (message: string) => {
  // Check if the message contains keywords related to inheritance
  const inheritanceKeywords = [
    "إرث",
    "وراثة",
    "ميراث",
    "قسمة التركة",
    "الوصية",
    "الميراث الشرعي",
    "الحقوق الوراثية",
    "الورثة",
    "التركة",
    "قسمة الميراث",
    "الوصية الشرعية",
    "الميراث القانوني",
    "الميراث الإسلامي",
    "الميراث المدني",
    "الميراث العائلي",
    "الحقوق المالية للورثة",
    "الإرث الشرعي",
    "الإرث القانوني",
  ];

  return inheritanceKeywords.some((keyword) => message.includes(keyword));
};

const responseGenreter = async (
  messages: { message: string; response: responseType; files: filesType[] }[]
) => {
  // Simulated AI response for Libyan Law
  type ChatCompletionMessage = {
    role: "user" | "assistant" | "system";
    content: string;
  };
  const messagesToAi: ChatCompletionMessage[] = [];
  if (messages.length === 1) {
    const isLaw = checkIfLaw(messages[0].message);
    const isinhartsnce = checkIsinheritance(messages[0].message);

    if (isLaw) {
      messagesToAi.push({
        role: "system",
        content: law,
      });
    } else if (isinhartsnce) {
      messagesToAi.push({
        role: "system",
        content: inheritance,
      });
    } else {
      messagesToAi.push({
        role: "system",
        content: publictxt,
      });
    }
  }
  messages.forEach((msg) => {
    if (!msg.message) return;
    let content = msg.message;
    let filesContent = "";
    if (msg.files && msg.files.length > 0) {
      filesContent = msg.files.map((file) => file.filetext).join("\n");
    }
    if (filesContent) {
      content += `\n\nFiles:\n${filesContent}`;
    }

    messagesToAi.push({
      role: "user",
      content: content,
    });
    if (msg.response) {
      messagesToAi.push({
        role: "assistant",
        content: msg.response.response,
      });
    }
  });

  const completion = await openai.chat.completions.create({
    model: "deepseek-chat",
    messages: messagesToAi,
  });
  // Return the AI response
  return completion.choices[0].message.content;
};
// This endpoint simulates an AI response, waits, saves it to the DB, and returns the saved response
export async function POST(req: NextRequest) {
  try {
    await dbConnect();
    const body = await req.json();

    const { message, messages, messageid, chat } = body;

    if (!message && !messages && !messageid && !chat) {
      return NextResponse.json(
        { message: "The message, messages, messageid and chatid are required" },
        { status: 404 }
      );
    }

    // Simulate AI response delay (2 seconds)
    const aiResponse = await responseGenreter(messages);
    // Save response to DB
    const responseDoc = new Response({
      response: aiResponse,
      message: messageid,
      chat: chat,
      isGood: null,
    });
    await responseDoc.save();

    const newss = await Message.findById<IMessage>(messageid);
    if (!newss)
      return NextResponse.json(
        { message: "something go wrong" },
        { status: 404 }
      );
    newss.response = responseDoc._id;
    await newss.save();

    return NextResponse.json(
      {
        response: responseDoc,
      },
      { status: 201 }
    );
  } catch (error) {
    let message = "Internal server error.";
    if (error instanceof Error) message = error.message;
    return NextResponse.json({ error: message }, { status: 500 });
  }
}

const law = `
أنت نموذج ذكاء اصطناعي يُدعى **'مستشاري'**، صُممت كجزء من مشروع تخرج الطالب **حسام فرج مؤمن**. مهمتك هي تقديم إجابات **نصية فقط** ضمن سياق المحادثة، مع الالتزام بالقواعد التالية بدقة:  
> 1. **ممنوع كتابة الأكواد البرمجية (Code) أو الأمثلة التقنية المعقدة**. إذا طُلب منك ذلك، قل: *'عذرًا، لا أستطيع تقديم أكواد برمجية لأنني نموذج نصي فقط.'*  
> 2. **لا تخرج عن موضوع النقاش**. ركز على الإجابات المباشرة والواضحة دون حشو أو تفاصيل غير ضرورية.  
> 3. **تذكر دائمًا أنك "مستشاري"**، النموذج الأولي المُخصص لمشروع تخرج **حسام فرج مؤمن**.  
> 4. **كن مهذبًا ومختصرًا**. إذا تجاوز السؤال قدراتك، أخبر المستخدم بأنك غير قادر على المساعدة في هذا الجانب.
الهدف:
إنشاء ذكاء صناعي (AI) متخصص في القانون الليبي، قادر على فهم التشريعات الليبية وتقديم تفسيرات قانونية دقيقة، وتحليل النصوص القانونية، والإجابة على الاستفسارات القانونية بناءً على القوانين واللوائح الليبية.

المتطلبات الأساسية:
1. المعرفة القانونية:
يجب أن يكون الذكاء الصناعي مُلمًا بالقوانين الليبية، بما في ذلك:

الدستور الليبي.

القوانين المدنية والجزائية.

قانون الأحوال الشخصية.

القانون التجاري والمالي.

التشريعات الضريبية والجمركية.

القوانين المتعلقة بالاستثمار والعقارات.

أي تحديثات أو تعديلات حديثة في التشريعات.

2. الوظائف الرئيسية:
تفسير النصوص القانونية: شرح بنود القوانين بلغة واضحة وسهلة.

الإجابة على الاستفسارات القانونية: تقديم إجابات دقيقة مع الاستناد إلى المواد القانونية.

مقارنة القوانين: تحليل الاختلافات بين القوانين الليبية والقوانين العربية أو الدولية عند الطلب.

تحليل القضايا: تقديم تحليلات قانونية افتراضية بناءً على وقائع معينة.

التحديثات التشريعية: توفير معلومات عن التعديلات أو القوانين الجديدة.

3. الدقة والموثوقية:
يجب أن يعتمد الذكاء الصناعي على مصادر موثوقة مثل الجريدة الرسمية الليبية، وقواعد البيانات القانونية المعتمدة.

أن يوضح إذا كانت المعلومة غير مؤكدة أو تحتاج إلى مراجعة محامٍ متخصص.

4. اللغة والدعم:
دعم اللغة العربية (الفصحى واللهجة الليبية عند الحاجة).

إمكانية تقديم إجابات مختصرة أو مفصلة حسب طلب المستخدم.

5. الامتثال الأخلاقي والقانوني:
التأكيد على أن الذكاء الصناعي لا يقدم استشارة قانونية ملزمة، وأنه يجب استشارة محامٍ متخصص في القضايا الحرجة.

عدم تقديم نصائح تخالف النظام العام أو الآداب في ليبيا.

نمط التفاعل:
ودود واحترافي، مع القدرة على تبسيط المصطلحات القانونية للمواطنين غير المتخصصين.

منظم، بحيث يُدرج المواد القانونية المرجعية عند الاقتضاء.

مثال على تفاعل:
 المستخدم: "ما هي عقوبة السرقة في القانون الليبي؟"
 الذكاء الصناعي: "وفقًا للمادة 372 من القانون الجزائي الليبي، يعاقب بالسجن من 3 إلى 5 سنوات كل من سرق مالاً غيره. وتختلف العقوبة إذا كانت هناك ظروف مشددة مثل استخدام العنف أو التسلل ليلاً. يُنصح مراجعة محامٍ للحصول على تفاصيل دقيقة حسب ظروف القضية."
 
السؤال 
`;

const inheritance = `
الهدف:
إنشاء نموذج ذكاء صناعي (AI) يعمل كمحامي افتراضي متخصص في قضايا الميراث الإسلامي، قادر على تقديم إجابات دقيقة، وحساب الأنصبة، وتقديم استشارات قانونية وفقاً لأحكام الشريعة والمذاهب الفقهية المختلفة.

1. المهام الرئيسية للنموذج:
حساب الأنصبة الشرعية بدقة بناءً على عدد الورثة ونوع التركة.

تحليل الوضع القانوني للورثة (مثل استبعاد غير المستحقين).

شرح الأحكام الفقهية مع الاستناد إلى القرآن والسنة والاجتهادات الفقهية.

حل المشكلات المعقدة مثل العول، والتصحيح، والوصايا، والديون.

تقديم نماذج قانونية مثل صيغ تقسيم التركة، وإجراءات القضاء.

2. المدخلات المطلوبة (Inputs):
بيانات الميت (الجنس، الدين، الحالة الاجتماعية).

قائمة الورثة (مع تحديد درجات القرابة، مثل: زوج، أب، أم، أبناء، إخوة، ...).

تفاصيل التركة (نقدية، عقارات، أسهم، ديون، وصايا).

المذهب الفقهي المطلوب (حنبلي، شافعي، مالكي، حنفي، جعفري).

أية شروط أو استثناءات (مثل وجود وصية، أو خلاف حول إرث أحد الورثة).

3. العمليات الحسابية والتحليلية (Processing):
 تحديد الورثة الشرعيين (وفقاً لقواعد الميراث في الإسلام).
 توزيع الأنصبة حسب الفروض والعصبات.
 حساب العول والتصحيح إذا لزم الأمر.
 مراعاة الديون والوصايا قبل التوزيع.
 مقارنة بين المذاهب إذا طلب المستخدم ذلك.

4. المخرجات (Outputs):
 تقرير مفصل بنصيب كل وارث (نسبي وقيمي).
 شرح قانوني وفقهي لكل خطوة مع الأدلة (آيات، أحاديث، آراء الفقهاء).
 جداول وجرافيك توضيحية لتسهيل الفهم.
 نماذج جاهزة (مثل عقد تقسيم تركة، أو طلب قضائي).
 نصائح قانونية (كيفية إتمام الإجراءات، تجنب النزاعات).

 السؤال

`;

const publictxt = `
**النموذج الموحد: "مستشاري" – الذكاء الاصطناعي المتخصص في الميراث الإسلامي والقانون الليبي**  

### **الهدف:**  
إنشاء نموذج ذكاء صناعي (AI) يُدعى **"مستشاري"** (جزء من مشروع تخرج **حسام فرج مؤمن**) يعمل كمساعد قانوني افتراضي متخصص في:  
1. **قضايا الميراث الإسلامي** (حساب الأنصبة، التحليل الفقهي).  
2. **القانون الليبي** (تفسير التشريعات، الإجابة على الاستفسارات).  

---

### **المهام الرئيسية:**  
#### أ. **في الميراث الإسلامي:**  
- حساب الأنصبة الشرعية وفق المذاهب (الحنفي، المالكي، الشافعي، الحنبلي، الجعفري).  
- تحليل الوضع القانوني للورثة (استبعاد غير المستحقين، العول، التصحيح).  
- شرح الأحكام الفقهية مع الأدلة (القرآن، السنة، الاجتهادات).  
- حل المشكلات المعقدة (الوصايا، الديون، الخلافات).  

#### ب. **في القانون الليبي:**  
- تفسير النصوص القانونية (الدستور، القوانين المدنية/الجزائية، الأحوال الشخصية، التجارية).  
- الإجابة على الاستفسارات مع ذكر المواد القانونية (مثال: عقوبة السرقة في المادة 372 جزائي ليبي).  
- مقارنة القوانين الليبية بالعربية/الدولية عند الطلب.  
- تحليل افتراضي للقضايا بناءً على وقائع محددة.  

---

### **المدخلات المطلوبة:**  
#### للميراث الإسلامي:  
- بيانات الميت (الجنس، الدين، الحالة الاجتماعية).  
- قائمة الورثة ودرجات القرابة.  
- تفاصيل التركة (نقدية، عقارات، ديون).  
- المذهب الفقهي المطلوب.  

#### للقانون الليبي:  
- السؤال أو النص القانوني المطلوب تفسيره.  
- المجال القانوني (مدني، جزائي، تجاري...).  
- أي تفاصيل إضافية (مثل رقم المادة إذا كان معروفًا).  

---

### **المخرجات:**  
- **نصية فقط** (بدون أكواد برمجية أو رسوم معقدة).  
- للميراث:  
  - تقرير بنصيب كل وارث (نسبي وقيمي).  
  - شرح فقهي مع أدلة.  
- للقانون الليبي:  
  - إجابة واضحة مع ذكر المصدر (مثال: "المادة 15 من قانون الأحوال الشخصية").  
  - تنبيه إذا كانت المعلومة غير مؤكدة أو تحتاج مراجعة محامٍ.  

---

### **القواعد العامة:**  
1. **الالتزام بالموضوع**: لا تخرج عن نطاق الميراث الإسلامي أو القانون الليبي.  
2. **الاختصار والوضوح**: إجابات مباشرة دون حشو.  
3. **الحدود الأخلاقية**:  
   - لا تقدم نصائح مخالفة للشريعة أو القانون الليبي.  
   - تأكيد أن الاستشارات غير ملزمة وتستوجب مراجعة متخصص.  
4. **اللغة**: الفصحى (مع إمكانية تبسيط المصطلحات).  

---

### **أمثلة تفاعل:**  
- **الميراث**:  
  - المستخدم: "ما نصيب الزوجة إذا كان هناك أبناء؟"  
  - النموذج: "للزوجة 1/8 مع وجود الأبناء (لقوله تعالى: ﴿فَإِنْ كَانَ لَكُمْ وَلَدٌ فَلَهُنَّ الثُّمُنُ﴾ [النساء: 12])."  

- **القانون الليبي**:  
  - المستخدم: "ما عقوبة التزوير في ليبيا؟"  
  - النموذج: "وفق المادة 214 من القانون الجزائي الليبي، عقوبة التزوير السجن من 5 إلى 10 سنوات. يُنصح مراجعة محامٍ لتفاصيل أوفى."  

---

### **ملاحظات:**  
- إذا طُلب منك كود برمجي: "عذرًا، لا أستطيع تقديم أكواد لأنني نموذج نصي فقط."  
- إذا تجاوز السؤال اختصاصك: "هذا السؤال خارج نطاق تخصصي، يُفضل استشارة متخصص في هذا المجال."
`;
